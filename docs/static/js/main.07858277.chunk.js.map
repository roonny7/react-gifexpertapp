{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,QCPlBK,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEKG,MAAMR,GAFX,cAEbS,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACThB,MAAQe,EAAIf,MACZC,IAAG,UAAGc,EAAIE,cAAP,aAAG,EAAYC,iBAAiBjB,QATxB,kBAaZY,GAbY,4CAAH,sDCOPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAYrB,EChBwB,SAACA,GACzB,MAA0BtB,mBAAS,CAC/B4B,KAAO,GACPQ,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACRlB,EAASC,GACRkB,MAAO,SAAAC,GACHH,EAAS,CACDV,KAAOa,EACPL,SAAU,SAGvB,CAACd,IAIGe,EDFwBK,CAAapB,GAAhCW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAGpB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAoDI,IAClDc,GAAW,0CAAad,EAAb,OAEb,qBAAKJ,UAAU,YAAf,SAEYe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eACIA,GADeA,EAAIC,aEGpCW,EA7BM,WAEjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEI6C,EAAWd,KAAK,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEGA,SAAUA,GADHA,Y,MCjB3BuB,IAASC,OAAO,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.07858277.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2){\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n\r\n        }\r\n        //console.log('no hay submit');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=d9RtJVFrRBRrYveOzMej9Mufhm3nTyH3`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url,\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}","//import React, { useState, useEffect, Fragment } from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\n//api.giphy.com/v1/gifs/search?q=saint seiya&limit=10&api_key=d9RtJVFrRBRrYveOzMej9Mufhm3nTyH3\r\nexport const GifGrid = ({category}) => {\r\n    //const [count, setCount] = useState(0);\r\n    \r\n    /*const [images, setImages] = useState([]);\r\n    \r\n    \r\n    \r\n    useEffect( () => { //esta madre hace que sólo se ejecute una vez\r\n        getGifs( category ).then ( setImages )\r\n    }, [category])\r\n*/\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p>Cargando {category} </p>}\r\n        { \r\n            <div className=\"card-grid\">\r\n                {\r\n                        images.map(img  => (\r\n                            <GifGridItem key ={img.id}\r\n                            {...img}/>\r\n                        ))\r\n                }               \r\n            </div> \r\n        }\r\n        </>\r\n    )\r\n}\r\n//  <h2>{ count } </h2> <button onClick={ () => setCount(count+1)}></button>\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    });\r\n\r\n    useEffect( () => { //esta madre hace que sólo se ejecute una vez\r\n       getGifs( category)\r\n       .then ( imgs => {\r\n            setState({\r\n                    data : imgs,\r\n                    loading : false\r\n                   });\r\n       })\r\n    }, [category])\r\n\r\n    \r\n\r\n    return state; // {data : [], loading : tru}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    //const categories = ['one punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    /*const handleAdd = () => { AGREGAR una categoría al hacer clic al botón\r\n        //setCategories(categories.push('Saint Seiya'));\r\n        //setCategories([...categories, 'Saint Seiya']);\r\n        setCategories(cats => [...cats, 'Saint Seiya']);\r\n        \r\n    } */   \r\n    return (\r\n        <>\r\n          <h2>Gif Expert App</h2>\r\n          <AddCategory setCategories= { setCategories}/>\r\n          <hr/>  \r\n          \r\n          <ol>\r\n              { \r\n              categories.map( category => (\r\n                 <GifGrid \r\n                    key = {category}\r\n                    category={category}\r\n                />\r\n              ))\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(<GifExpert />, document.getElementById('root'));\n\n"],"sourceRoot":""}